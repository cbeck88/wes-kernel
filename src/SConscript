import commands, os
from subprocess import Popen, PIPE
from glob import glob

Import("*")

#
# Source lists
#

wesnoth_sources = Split("""
	wml_parser.cpp
""")

libwesnoth_extras = client_env.Library("wesnoth_extras", wesnoth_sources)



json_parser_sources = Split("""
	parser.cpp
""")

libjson_extras = client_env.Library("json_extras", json_parser_sources)

#
# Target declarations
#

def error_action(target, source, env):
    from SCons.Errors import UserError
    raise UserError, "Target disabled because its prerequisites are not met"

def WesnothProgram(env, target, source, can_build, **kw):
    bin = env.Program("#/" + target + build_suffix, source, **kw)
    env.Alias(target, bin)
    locals()[target] = bin
    Export(target)

client_env.AddMethod(WesnothProgram)

wesnoth_objects = ["wesnoth.cpp", libwesnoth_extras]

bin = env.Program("#/wesnoth", wesnoth_objects)
env.Alias("wesnoth", bin)


json_objects = ["json_parser.cpp", libjson_extras]

bin = env.Program("#/json", json_objects)
env.Alias("json", bin)



bin = env.Program("#/kv", ["key_value_sequence.cpp"])
env.Alias("kv", bin)

#Export("wesnoth")
